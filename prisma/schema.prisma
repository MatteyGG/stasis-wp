generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String  @db.Text
  type              String  @db.Text
  provider          String  @db.Text
  providerAccountId String  @db.Text
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String? @db.Text
  scope             String? @db.Text
  id_token          String? @db.Text
  session_state     String? @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String   @db.Text
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  image         String?   @default("")
  username      String?   @default("")
  approved      Boolean   @default(false)
  password      String    @default("default_Ann_password_value") @db.Char(60)
  email         String?   @unique
  emailVerified DateTime?
  role          String?   @default("user")
  rank          String?   @default("R1")
  army          String?
  nation        String?
  created_at    DateTime  @default(now())
  accounts      Account[]
  sessions      Session[]
  alerts        Alert[]
}

model VerificationToken {
  identifier String   @db.Text
  token      String   @unique @db.Text
  expires    DateTime

  @@unique([identifier, token])
}

model Image {
  id        Int      @id @default(autoincrement())
  filename  String
  filepath  String
  createdAt DateTime @default(now())
}

model Wiki {
  autor     String?
  pageId    String   @id @unique @default(cuid())
  title     String?
  scr       String   @default("placeholder.png")
  alt       String?  @default("Prewiew image")
  category  String?
  short     String?
  md        String
  published Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Alert {
  id        Int       @id @default(autoincrement())
  userId    String
  type      String  @default("info")
  message   String
  createdAt DateTime  @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Promocode {
  id        Int       @id @default(autoincrement())
  code      String    @unique
  createdAt DateTime  @default(now())
  until     DateTime?
}
